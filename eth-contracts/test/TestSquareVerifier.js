// define a variable to import the <Verifier> or <renamedVerifier> solidity contract generated by Zokrates
var Verifier = artifacts.require('Verifier');

contract('Verifier', accounts => {

    const account_one = accounts[0];
    const proof = require('./proof.json')

    describe('match erc721 spec', function () {
        beforeEach(async function () {
            this.contract = await Verifier.new({ from: account_one });
        })

        // Test verification with correct proof
        // - use the contents from proof.json generated from zokrates steps
        it('Correct proof', async function () {
            const { proof: { a, b, c }, inputs: inputs } = proof
            const verification = await this.contract.verifyTx.call(a, b, c, inputs, { from: account_one })
            assert.equal(verification, true, "Verification failed with correct proof")
        })

        // Test verification with incorrect proof
        it('Incorrect proof', async function () {
            const { proof: { a, b, c }, inputs: inputs } = proof
            const verification = await this.contract.verifyTx.call(a, b, c, [0,0], { from: account_one })
            assert.equal(verification, false, "Verification did not fail with incorrect proof")
        })
    });
})